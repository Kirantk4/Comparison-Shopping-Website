{"ast":null,"code":"async function createNewUser(emailInput, usernameInput, addressInput, passwordInput) {\n  const userArray = {\n    Name: usernameInput,\n    Email: emailInput,\n    Address: addressInput,\n    Password: passwordInput\n  };\n  const newUser = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userArray)\n  };\n  var validResponse;\n  // eslint-disable-next-line\n  const res = await fetch(process.env.REACT_APP_API_URL + \"/v1/users/create\", newUser).then(result => {\n    if (result.status === 400) {\n      console.log(\"Signup failed\");\n      validResponse = false;\n    } else {\n      console.log(\"Successful Signup\");\n      validResponse = true;\n    }\n  });\n  return validResponse;\n}\nasync function verifyLogin(emailInput, passwordInput) {\n  const loginArray = {\n    Email: emailInput,\n    Password: passwordInput\n  };\n  const loginPost = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginArray)\n  };\n  var validResponse;\n  // eslint-disable-next-line\n  const res = await fetch(process.env.REACT_APP_API_URL + \"/v1/users/login\", loginPost).then(result => {\n    console.log(result);\n    if (result.status === 404) {\n      validResponse = false;\n    } else if (result.status === 200) {\n      validResponse = true;\n    } else {\n      validResponse = false;\n    }\n  });\n  console.log(validResponse);\n  return validResponse;\n}\nasync function retrieveUserData(emailInput) {\n  const res = await fetch(process.env.REACT_APP_API_URL + \"/v1/users/email/\" + emailInput);\n  const json = await res.json();\n  return json;\n}\n// DEBUG FUNCTION DO NOT USE\nasync function testUser() {\n  const testUser = {\n    Name: \"test\",\n    Email: \"test@test.com\",\n    Address: \"test\",\n    Password: \"test\"\n  };\n  const newUser = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(testUser)\n  };\n  console.log(newUser);\n  await fetch(process.env.REACT_APP_API_URL + \"/v1/users/create\", newUser);\n  ;\n}\nexport { createNewUser, testUser, retrieveUserData, verifyLogin };","map":{"version":3,"names":["createNewUser","emailInput","usernameInput","addressInput","passwordInput","userArray","Name","Email","Address","Password","newUser","method","headers","body","JSON","stringify","validResponse","res","fetch","process","env","REACT_APP_API_URL","then","result","status","console","log","verifyLogin","loginArray","loginPost","retrieveUserData","json","testUser"],"sources":["/Users/Kiran/github-classroom/Personal/Comparison-Shopping-Website/frontend/comparison-shopper/src/Data/repository.js"],"sourcesContent":["async function createNewUser(emailInput, usernameInput, addressInput, passwordInput) {\n  const userArray ={\n      Name: usernameInput,\n      Email: emailInput,\n      Address:addressInput,\n      Password:passwordInput\n  }\n  const newUser = {\n    method:'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userArray)\n  };\n  var validResponse;\n  // eslint-disable-next-line\n  const res = await fetch(process.env.REACT_APP_API_URL+\"/v1/users/create\", newUser)\n    .then((result) => {\n      if (result.status === 400) {\n        console.log(\"Signup failed\");\n        validResponse = false;\n      } else {\n        console.log(\"Successful Signup\");\n        validResponse = true;\n      }\n    });\n    return validResponse;\n}\n\nasync function verifyLogin(emailInput, passwordInput){\n  const loginArray = {\n    Email: emailInput,\n    Password: passwordInput\n  }\n  const loginPost = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginArray)\n  };\n  var validResponse;\n  // eslint-disable-next-line\n  const res = await fetch(process.env.REACT_APP_API_URL+\"/v1/users/login\", loginPost)\n    .then((result) => {\n      console.log(result);\n      if (result.status === 404) {\n        validResponse = false;\n      } else if (result.status === 200) {\n        validResponse = true;\n      } else {\n        validResponse = false;\n      }\n    });\n    console.log(validResponse);\n    return validResponse;\n}\n\nasync function retrieveUserData(emailInput) {\n  const res = await fetch(process.env.REACT_APP_API_URL+\"/v1/users/email/\" + emailInput);\n  const json = await res.json();\n  return json;\n}\n// DEBUG FUNCTION DO NOT USE\nasync function testUser() {\n  const testUser = {\n    Name: \"test\",\n    Email: \"test@test.com\",\n    Address:\"test\",\n    Password: \"test\"\n  };\n  const newUser = {\n    method:'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(testUser)\n  };\n  console.log(newUser);\n  await fetch(process.env.REACT_APP_API_URL+\"/v1/users/create\", newUser);\n;\n}\nexport {\n  createNewUser, testUser, retrieveUserData, verifyLogin\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}