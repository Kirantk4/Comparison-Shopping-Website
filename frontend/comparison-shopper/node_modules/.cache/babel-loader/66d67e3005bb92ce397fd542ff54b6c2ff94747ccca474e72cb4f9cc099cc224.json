{"ast":null,"code":"var _jsxFileName = \"/Users/Kiran/github-classroom/SEPT/team-project-group-p03-08/frontend/comparison-shopper/src/Components/CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../App.js';\nimport './CartPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartPage = () => {\n  _s();\n  //const { user } = useContext(UserContext);\n  //const [cart, setCart] = useState([]);\n\n  const {\n    user\n  } = useContext(UserContext);\n  console.log(user);\n  const [cart, setCart] = useState([]);\n  const navigate = useNavigate();\n\n  //const navigate = useNavigate();\n  const productPage = productId => {\n    navigate(`/product/${productId}`);\n  };\n  const roundedQuantity = num => Math.round(num * 100) / 100;\n  useEffect(() => {\n    console.log(user);\n    console.log(\"NotWan\");\n    const fetchCartForUser = async () => {\n      const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n      const data = await response.json();\n      if (data) {\n        setCart(data);\n      } else {\n        console.error(\"Expected cart data to be an array but received:\", data);\n        setCart([]);\n      }\n    };\n    fetchCartForUser();\n  }, [user]);\n\n  // const addToCart = async (product) => {\n  //     const response = await fetch('http://localhost:8080/v1/carts/add', {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify({\n  //             cartId: cart.id,\n  //             productId: product.id,\n  //             quantity: 1\n  //         })\n  //     });\n\n  //     if (response.ok) {\n  //         const updatedCart = await response.json();\n  //         setCart(updatedCart);\n  //     }\n  // };\n\n  const updateProductQuantity = async (productId, newQuantity) => {\n    console.log(cart);\n    await fetch('http://localhost:8080/v1/carts/set', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cartId: cart.cartId,\n        productId,\n        quantity: newQuantity\n      })\n    });\n\n    // const updatedProduct = cart.find(product => product.productId === productId);\n    // updatedProduct.quantity = newQuantity;\n    // setCart([...cart]);\n    if (cart.contents && cart.contents[productId]) {\n      cart.contents[productId] = newQuantity;\n      setCart({\n        ...cart\n      });\n    }\n  };\n  const removeFromCart = async productId => {\n    await fetch(`http://localhost:8080/v1/carts/delete`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cartId: cart.cartId,\n        productId\n      })\n    });\n    const updatedCart = cart.filter(product => product.productId !== productId);\n    setCart(updatedCart);\n  };\n  const clearCart = async () => {\n    await fetch(`http://localhost:8080/v1/carts/clear/${user.UserID}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setCart([]);\n  };\n\n  //const grandTotal = cart.reduce((acc, product) => acc + product.price * product.quantity, 0);\n  const grandTotal = Array.isArray(cart) ? cart.reduce((acc, product) => acc + product.price * product.quantity, 0) : 0;\n  const updateQuantity = async (productID, newQuantity) => {\n    if (newQuantity >= 1) {\n      await updateProductQuantity(productID, newQuantity);\n    }\n  };\n  const getProductIdsByCartId = (cart, cartId) => {\n    if (cart && cart.cartID === cartId && cart.contents) {\n      return Object.keys(cart.contents).map(Number);\n    }\n    return [];\n  };\n  const cartIdToSearch = cart.cartID;\n  const productIdsArray = cartIdToSearch ? getProductIdsByCartId(cart, cartIdToSearch) : [];\n  console.log(productIdsArray);\n  console.log(cart.cartId);\n  console.log(cart);\n  console.log(\"ItemsINARRAY\");\n  const fetchProductData = async cart => {\n    const productPromises = Object.keys(cart.contents).map(id => fetch(`http://localhost:8080/v1/products/${id}`).then(res => res.json()).then(product => {\n      product.quantity = cart.contents[id];\n      return product;\n    }));\n    const products = await Promise.all(productPromises);\n    return products;\n  };\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    if (cart && cart.contents) {\n      fetchProductData(cart).then(data => {\n        setProducts(data);\n      });\n    }\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cartWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Items in cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => productPage(product.productID),\n              style: {\n                border: 'none',\n                background: 'transparent'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: '/products/' + product.productID + '.webp',\n                alt: \"Image of \" + product.productName,\n                width: 70,\n                style: {\n                  border: '2px solid #000',\n                  borderRadius: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFromCart(product.productID),\n              className: \"removeBtn\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Qty:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: product.quantity,\n              onChange: e => updateQuantity(product.productID, parseInt(e.target.value)),\n              className: \"quantityInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Total: $\", roundedQuantity(product.price * (product.quantity || 1))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, product.productID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clearCartGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCart,\n        className: \"clearCart\",\n        children: \"Clear Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Grand Total: $\", roundedQuantity(grandTotal)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonsGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"continueBtn\",\n        children: \"Continue Shopping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"checkoutBtn\",\n        children: \"Proceed To Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(user.Name),\n      children: \" test Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_s(CartPage, \"Is9bZh/JzR9isisBxruPUUeu+qk=\", false, function () {\n  return [useNavigate];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","UserContext","jsxDEV","_jsxDEV","CartPage","_s","user","console","log","cart","setCart","navigate","productPage","productId","roundedQuantity","num","Math","round","fetchCartForUser","response","fetch","UserID","data","json","error","updateProductQuantity","newQuantity","method","headers","body","JSON","stringify","cartId","quantity","contents","removeFromCart","updatedCart","filter","product","clearCart","grandTotal","Array","isArray","reduce","acc","price","updateQuantity","productID","getProductIdsByCartId","cartID","Object","keys","map","Number","cartIdToSearch","productIdsArray","fetchProductData","productPromises","id","then","res","products","Promise","all","setProducts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","border","background","src","alt","productName","width","borderRadius","type","value","onChange","e","parseInt","target","Name","_c","$RefreshReg$"],"sources":["/Users/Kiran/github-classroom/SEPT/team-project-group-p03-08/frontend/comparison-shopper/src/Components/CartPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {UserContext} from '../App.js';\nimport './CartPage.css';\n\n\nconst CartPage = () => {\n    //const { user } = useContext(UserContext);\n    //const [cart, setCart] = useState([]);\n\n    const { user } = useContext(UserContext);\n    console.log(user)\n    const [cart, setCart] = useState([]);\n    const navigate = useNavigate();\n\n    //const navigate = useNavigate();\n    const productPage = (productId) => {\n        navigate(`/product/${productId}`);\n    };\n\n    const roundedQuantity = (num) => Math.round(num * 100) / 100;\n    \n    useEffect(() => {\n        console.log(user)\n        console.log(\"NotWan\");\n        const fetchCartForUser = async () => {\n            const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n            const data = await response.json();\n            if (data) {\n                setCart(data);\n            } else {\n                console.error(\"Expected cart data to be an array but received:\", data);\n                setCart([]); \n            }\n        };\n        fetchCartForUser();\n    }, [user]);\n\n    // const addToCart = async (product) => {\n    //     const response = await fetch('http://localhost:8080/v1/carts/add', {\n    //         method: 'POST',\n    //         headers: { 'Content-Type': 'application/json' },\n    //         body: JSON.stringify({\n    //             cartId: cart.id,\n    //             productId: product.id,\n    //             quantity: 1\n    //         })\n    //     });\n\n    //     if (response.ok) {\n    //         const updatedCart = await response.json();\n    //         setCart(updatedCart);\n    //     }\n    // };\n\n    const updateProductQuantity = async (productId, newQuantity) => {\n        console.log(cart)\n        await fetch('http://localhost:8080/v1/carts/set', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                cartId: cart.cartId,\n                productId,\n                quantity: newQuantity\n            })\n        });\n\n        // const updatedProduct = cart.find(product => product.productId === productId);\n        // updatedProduct.quantity = newQuantity;\n        // setCart([...cart]);\n        if (cart.contents && cart.contents[productId]) {\n            cart.contents[productId] = newQuantity;\n            setCart({ ...cart });\n        }\n    };\n\n    const removeFromCart = async (productId) => {\n        await fetch(`http://localhost:8080/v1/carts/delete`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                cartId: cart.cartId,\n                productId\n            })\n        });\n\n        const updatedCart = cart.filter(product => product.productId !== productId);\n        setCart(updatedCart);\n    };\n\n    const clearCart = async () => {\n        await fetch(`http://localhost:8080/v1/carts/clear/${user.UserID}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        });\n        setCart([]);\n    };\n    \n    //const grandTotal = cart.reduce((acc, product) => acc + product.price * product.quantity, 0);\n    const grandTotal = Array.isArray(cart) ? cart.reduce((acc, product) => acc + product.price * product.quantity, 0) : 0;\n\n\n    const updateQuantity = async (productID, newQuantity) => {\n        if (newQuantity >= 1) {\n          await updateProductQuantity(productID, newQuantity);\n        }\n    };\n\n        \n    const getProductIdsByCartId = (cart, cartId) => {\n        if (cart && cart.cartID === cartId && cart.contents) {\n            return Object.keys(cart.contents).map(Number);\n        }\n        return [];\n    };\n\n\n    const cartIdToSearch = cart.cartID;\n    const productIdsArray = cartIdToSearch ? getProductIdsByCartId(cart, cartIdToSearch) : [];\n    \n    console.log(productIdsArray)\n    console.log(cart.cartId)\n    console.log(cart)\n    console.log(\"ItemsINARRAY\")\n\n    const fetchProductData = async (cart) => {\n        const productPromises = Object.keys(cart.contents).map(id => \n            fetch(`http://localhost:8080/v1/products/${id}`)\n            .then(res => res.json())\n            .then(product => {\n                product.quantity = cart.contents[id];\n                return product;\n            })\n        );\n    \n        const products = await Promise.all(productPromises);\n        return products;\n    };\n    \n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        if (cart && cart.contents) {\n            fetchProductData(cart).then(data => {\n                setProducts(data);\n            });\n        }\n    }, [cart]);\n\n\n  \n    return (\n        <div className=\"cartWrapper\">\n            <h2>Items in cart</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Product Photo</th>\n                        <th>Product Name</th>\n                        <th></th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {/* <p>{productIdsArray.join(', ')}</p> */}\n                    {/* {cart.map((product) => ( */}\n                        {/* <tr key={product.productID}>\n                            <td>\n                                <button onClick={() => productPage(product.productID)} style={{border: 'none', background: 'transparent'}}>\n                                    <img src={'/products/' + product.productID + '.webp'} \n                                        alt={\"Image of \" + product.productName} \n                                        width={70} \n                                        style={{border: '2px solid #000', borderRadius: '5px'}} />\n                                </button>\n                            </td>\n                            <td>{product.productName}</td>\n                            <td><button onClick={() => removeFromCart(product.productID)} className=\"removeBtn\">Remove</button></td>\n                            <td>\n                                <span>Qty:</span>\n                                <input type=\"number\" value={product.quantity || 1} onChange={(e) => updateQuantity(product.productID, parseInt(e.target.value))} className=\"quantityInput\" />\n                            </td>\n                            <td>Total: ${roundedQuantity(product.price * (product.quantity || 1))}</td>\n                        </tr> */}\n                    {/* ))} */}\n                    {products.map((product) => (\n                        <tr key={product.productID}>\n                            <td>\n                                <button onClick={() => productPage(product.productID)} style={{border: 'none', background: 'transparent'}}>\n                                    <img src={'/products/' + product.productID + '.webp'} \n                                        alt={\"Image of \" + product.productName} \n                                        width={70} \n                                        style={{border: '2px solid #000', borderRadius: '5px'}} />\n                                </button>\n                            </td>\n                            <td>{product.productName}</td>\n                            <td><button onClick={() => removeFromCart(product.productID)} className=\"removeBtn\">Remove</button></td>\n                            <td>\n                                <span>Qty:</span>\n                                <input type=\"number\" value={product.quantity} onChange={(e) => updateQuantity(product.productID, parseInt(e.target.value))} className=\"quantityInput\" />\n                            </td>\n                            <td>Total: ${roundedQuantity(product.price * (product.quantity || 1))}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"clearCartGroup\">\n                <button onClick={clearCart} className=\"clearCart\">Clear Cart</button>\n                <span>Grand Total: ${roundedQuantity(grandTotal)}</span>\n            </div>\n            <div className=\"buttonsGroup\">\n                <button className=\"continueBtn\">Continue Shopping</button>\n                <button className=\"checkoutBtn\">Proceed To Checkout</button>\n            </div>\n            <button onClick={() => console.log(user.Name)} > test Button</button>\n        </div>\n    );\n}\nexport default CartPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}