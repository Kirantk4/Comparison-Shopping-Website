{"ast":null,"code":"var _jsxFileName = \"/Users/Kiran/github-classroom/SEPT/team-project-group-p03-08/frontend/comparison-shopper/src/Components/CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../App.js';\nimport './CartPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartPage = () => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n  const roundedQuantity = num => Math.round(num * 100) / 100;\n  const productPage = productId => {\n    navigate(`/product/${productId}`);\n  };\n  useEffect(() => {\n    if (!user || !user.UserID) return;\n    const fetchCartForUser = async () => {\n      const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n      const data = await response.json();\n      if (data && data.contents) {\n        setCart(data);\n        const productPromises = Object.keys(data.contents).map(async id => {\n          const product = await fetch(`http://localhost:8080/v1/products/${id}`).then(res => res.json());\n          product.quantity = data.contents[id];\n          product.price = await fetchProductWithLowestPrice(id);\n          return product;\n        });\n        const fetchedProducts = await Promise.all(productPromises);\n        setProducts(fetchedProducts);\n      }\n    };\n    fetchCartForUser();\n  }, [user]);\n\n  // useEffect(() => {\n  //     if (!user || !user.UserID) return; \n\n  //     const fetchCartForUser = async () => {\n  //         const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n  //         const data = await response.json();\n  //         if (data && data.contents) {\n  //             setCart(data);\n\n  //             const productPromises = Object.keys(data.contents).map(id =>\n  //                 fetch(`http://localhost:8080/v1/products/${id}`)\n  //                     .then(res => res.json())\n  //                     .then(product => {\n  //                         product.quantity = data.contents[id];\n  //                         return product;\n  //                     })\n  //             );\n  //             const fetchedProducts = await Promise.all(productPromises);\n  //             setProducts(fetchedProducts);\n  //         }\n  //     };\n\n  //     const fetchProductWithLowestPrice = async (id) => {\n  //         const response = await fetch(`http://localhost:8080/v1/products/price/${id}`);\n  //         const priceData = await response.json();\n\n  //         // Find the lowest price\n  //         const lowestPriceObject = priceData.reduce((lowest, current) => {\n  //             return (current.price < lowest.price) ? current : lowest;\n  //         });\n\n  //         return lowestPriceObject.price;\n  //     };\n\n  //     fetchCartForUser();\n  // }, [user]);\n\n  // useEffect(() => {\n  //     if (!user || !user.UserID) return; \n\n  //     const fetchCartForUser = async () => {\n  //         const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n  //         const data = await response.json();\n  //         if (data && data.contents) {\n  //             setCart(data);\n\n  //             const productPromises = Object.keys(data.contents).map(id =>\n  //                 fetch(`http://localhost:8080/v1/products/${id}`)\n  //                     .then(res => res.json())\n  //                     .then(product => {\n  //                         product.quantity = data.contents[id];\n  //                         return product;\n  //                     })\n  //             );\n  //             const fetchedProducts = await Promise.all(productPromises);\n  //             setProducts(fetchedProducts);\n  //         }\n  //     };\n\n  //     const fetchProductWithLowestPrice = async (id) => {\n  //         const response = await fetch(`http://localhost:8080/v1/products/price/${id}`);\n  //         const priceData = await response.json();\n\n  //         // Find the lowest price\n  //         const lowestPriceObject = priceData.reduce((lowest, current) => {\n  //             return (current.price < lowest.price) ? current : lowest;\n  //         });\n\n  //         return lowestPriceObject.price;\n  //     };\n\n  //     const productPromises = Object.keys(data.contents).map(async id => {\n  //         const product = await fetch(`http://localhost:8080/v1/products/${id}`).then(res => res.json());\n  //         product.quantity = data.contents[id];\n  //         product.price = await fetchProductWithLowestPrice(id);\n  //         return product;\n  //     });\n\n  //     fetchCartForUser();\n  // }, [user]);\n\n  const handleQuantityChange = async (productId, newQuantity) => {\n    console.log(`Attempting to update product ${productId} with quantity ${newQuantity}`);\n    console.log(cart.cartID);\n    console.log(productId);\n    console.log(newQuantity);\n    if (newQuantity >= 1) {\n      const updatedContents = {\n        ...cart.contents,\n        [productId]: newQuantity\n      };\n      const updatedCart = {\n        ...cart,\n        contents: updatedContents\n      };\n      setCart(updatedCart);\n      try {\n        await fetch('http://localhost:8080/v1/carts/set', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            cartid: cart.cartID,\n            productid: productId,\n            quantity: newQuantity\n          })\n        });\n        const updatedProducts = products.map(product => {\n          if (product.productID === productId) {\n            return {\n              ...product,\n              quantity: newQuantity\n            };\n          }\n          return product;\n        });\n        setProducts(updatedProducts);\n      } catch (error) {\n        console.error(\"Error updating product quantity:\", error);\n      }\n    }\n  };\n  const removeFromCart = async productId => {\n    await fetch(`http://localhost:8080/v1/carts/delete`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cartid: cart.cartID,\n        productid: productId\n      })\n    });\n    const updatedProducts = products.filter(product => product.productID !== productId);\n    setProducts(updatedProducts);\n  };\n  const clearCart = async () => {\n    await fetch(`http://localhost:8080/v1/carts/clear/${user.UserID}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setCart([]);\n  };\n  const grandTotal = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n  const getProductIdsByCartId = (cart, cartId) => {\n    if (cart && cart.cartID === cartId && cart.contents) {\n      return Object.keys(cart.contents).map(Number);\n    }\n    return [];\n  };\n  const cartIdToSearch = cart.cartID;\n  const productIdsArray = cartIdToSearch ? getProductIdsByCartId(cart, cartIdToSearch) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cartWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Items in cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => productPage(product.productID),\n              style: {\n                border: 'none',\n                background: 'transparent'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: '/products/' + product.productID + '.webp',\n                alt: \"Image of \" + product.productName,\n                width: 70,\n                style: {\n                  border: '2px solid #000',\n                  borderRadius: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFromCart(product.productID),\n              className: \"removeBtn\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Qty:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: product.quantity,\n              onChange: e => {\n                console.log(\"Updated Quantity:\", e.target.value);\n                console.log(\"chichen\");\n                handleQuantityChange(product.productID, parseInt(e.target.value));\n              },\n              className: \"quantityInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Total: $\", roundedQuantity(product.price * (product.quantity || 1))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this)]\n        }, product.productID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clearCartGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCart,\n        className: \"clearCart\",\n        children: \"Clear Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Grand Total: $\", roundedQuantity(grandTotal)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonsGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"continueBtn\",\n        children: \"Continue Shopping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"checkoutBtn\",\n        children: \"Proceed To Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(user.Name),\n      children: \" test Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n_s(CartPage, \"Rizscxe0rwJIzcMv4pEOrPyuhxg=\", false, function () {\n  return [useNavigate];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","UserContext","jsxDEV","_jsxDEV","CartPage","_s","user","cart","setCart","products","setProducts","navigate","roundedQuantity","num","Math","round","productPage","productId","UserID","fetchCartForUser","response","fetch","data","json","contents","productPromises","Object","keys","map","id","product","then","res","quantity","price","fetchProductWithLowestPrice","fetchedProducts","Promise","all","handleQuantityChange","newQuantity","console","log","cartID","updatedContents","updatedCart","method","headers","body","JSON","stringify","cartid","productid","updatedProducts","productID","error","removeFromCart","filter","clearCart","grandTotal","reduce","acc","getProductIdsByCartId","cartId","Number","cartIdToSearch","productIdsArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","border","background","src","alt","productName","width","borderRadius","type","value","onChange","e","target","parseInt","Name","_c","$RefreshReg$"],"sources":["/Users/Kiran/github-classroom/SEPT/team-project-group-p03-08/frontend/comparison-shopper/src/Components/CartPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {UserContext} from '../App.js';\nimport './CartPage.css';\n\n\nconst CartPage = () => {\n    const { user } = useContext(UserContext);\n    const [cart, setCart] = useState([]);\n    const [products, setProducts] = useState([]);\n    const navigate = useNavigate();\n\n    const roundedQuantity = (num) => Math.round(num * 100) / 100;\n\n    const productPage = (productId) => {\n        navigate(`/product/${productId}`);\n    };\n\n    useEffect(() => {\n        if (!user || !user.UserID) return; \n    \n        const fetchCartForUser = async () => {\n            const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n            const data = await response.json();\n            if (data && data.contents) {\n                setCart(data);\n    \n                const productPromises = Object.keys(data.contents).map(async id => {\n                    const product = await fetch(`http://localhost:8080/v1/products/${id}`).then(res => res.json());\n                    product.quantity = data.contents[id];\n                    product.price = await fetchProductWithLowestPrice(id); \n                    return product;\n                });\n    \n                const fetchedProducts = await Promise.all(productPromises);\n                setProducts(fetchedProducts);\n            }\n        };\n    \n        fetchCartForUser();\n    }, [user]);\n    \n    // useEffect(() => {\n    //     if (!user || !user.UserID) return; \n    \n    //     const fetchCartForUser = async () => {\n    //         const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n    //         const data = await response.json();\n    //         if (data && data.contents) {\n    //             setCart(data);\n    \n    //             const productPromises = Object.keys(data.contents).map(id =>\n    //                 fetch(`http://localhost:8080/v1/products/${id}`)\n    //                     .then(res => res.json())\n    //                     .then(product => {\n    //                         product.quantity = data.contents[id];\n    //                         return product;\n    //                     })\n    //             );\n    //             const fetchedProducts = await Promise.all(productPromises);\n    //             setProducts(fetchedProducts);\n    //         }\n    //     };\n    \n    //     const fetchProductWithLowestPrice = async (id) => {\n    //         const response = await fetch(`http://localhost:8080/v1/products/price/${id}`);\n    //         const priceData = await response.json();\n    \n    //         // Find the lowest price\n    //         const lowestPriceObject = priceData.reduce((lowest, current) => {\n    //             return (current.price < lowest.price) ? current : lowest;\n    //         });\n    \n    //         return lowestPriceObject.price;\n    //     };\n    \n    //     fetchCartForUser();\n    // }, [user]);\n\n\n    // useEffect(() => {\n    //     if (!user || !user.UserID) return; \n\n    //     const fetchCartForUser = async () => {\n    //         const response = await fetch(`http://localhost:8080/v1/carts/customer/${user.UserID}`);\n    //         const data = await response.json();\n    //         if (data && data.contents) {\n    //             setCart(data);\n\n    //             const productPromises = Object.keys(data.contents).map(id =>\n    //                 fetch(`http://localhost:8080/v1/products/${id}`)\n    //                     .then(res => res.json())\n    //                     .then(product => {\n    //                         product.quantity = data.contents[id];\n    //                         return product;\n    //                     })\n    //             );\n    //             const fetchedProducts = await Promise.all(productPromises);\n    //             setProducts(fetchedProducts);\n    //         }\n    //     };\n\n\n\n    //     const fetchProductWithLowestPrice = async (id) => {\n    //         const response = await fetch(`http://localhost:8080/v1/products/price/${id}`);\n    //         const priceData = await response.json();\n    \n    //         // Find the lowest price\n    //         const lowestPriceObject = priceData.reduce((lowest, current) => {\n    //             return (current.price < lowest.price) ? current : lowest;\n    //         });\n    \n    //         return lowestPriceObject.price;\n    //     };\n    \n    //     const productPromises = Object.keys(data.contents).map(async id => {\n    //         const product = await fetch(`http://localhost:8080/v1/products/${id}`).then(res => res.json());\n    //         product.quantity = data.contents[id];\n    //         product.price = await fetchProductWithLowestPrice(id);\n    //         return product;\n    //     });\n\n    //     fetchCartForUser();\n    // }, [user]);\n\n\n    const handleQuantityChange = async (productId, newQuantity) => {\n\n        console.log(`Attempting to update product ${productId} with quantity ${newQuantity}`); \n        console.log(cart.cartID);\n        console.log(productId);\n        console.log(newQuantity);\n\n        if (newQuantity >= 1) {\n            const updatedContents = { ...cart.contents, [productId]: newQuantity };\n            const updatedCart = { ...cart, contents: updatedContents };\n            setCart(updatedCart);\n\n            try {\n                await fetch('http://localhost:8080/v1/carts/set', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        cartid: cart.cartID,\n                        productid: productId,\n                        quantity: newQuantity\n                    })\n                });\n                \n\n                const updatedProducts = products.map(product => {\n                    if (product.productID === productId) {\n                        return { ...product, quantity: newQuantity };\n                    }\n                    return product;\n                });\n                setProducts(updatedProducts);\n            } catch (error) {\n                console.error(\"Error updating product quantity:\", error);\n            }\n        }\n    };\n    \n    \n\n    const removeFromCart = async (productId) => {\n        await fetch(`http://localhost:8080/v1/carts/delete`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                cartid: cart.cartID,\n                productid: productId,\n            })\n        });\n\n        const updatedProducts = products.filter(product => product.productID !== productId);\n        setProducts(updatedProducts);\n    };\n\n    const clearCart = async () => {\n        await fetch(`http://localhost:8080/v1/carts/clear/${user.UserID}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        });\n        setCart([]);\n    };\n    \n    const grandTotal = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n        \n    const getProductIdsByCartId = (cart, cartId) => {\n        if (cart && cart.cartID === cartId && cart.contents) {\n            return Object.keys(cart.contents).map(Number);\n        }\n        return [];\n    };\n\n\n    const cartIdToSearch = cart.cartID;\n    const productIdsArray = cartIdToSearch ? getProductIdsByCartId(cart, cartIdToSearch) : [];\n    \n    \n    return (\n        <div className=\"cartWrapper\">\n            <h2>Items in cart</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Product Photo</th>\n                        <th>Product Name</th>\n                        <th></th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map((product) => (\n                        <tr key={product.productID}>\n                            <td>\n                                <button onClick={() => productPage(product.productID)} style={{border: 'none', background: 'transparent'}}>\n                                    <img src={'/products/' + product.productID + '.webp'} \n                                        alt={\"Image of \" + product.productName} \n                                        width={70} \n                                        style={{border: '2px solid #000', borderRadius: '5px'}} />\n                                </button>\n                            </td>\n                            <td>{product.productName}</td>\n                            <td><button onClick={() => removeFromCart(product.productID)} className=\"removeBtn\">Remove</button></td>\n                            <td>\n                                <span>Qty:</span>\n                                {/* <input type=\"number\" value={product.quantity} onChange={(e) => updateQuantity(product.productID, parseInt(e.target.value))} className=\"quantityInput\" /> */}\n                                <input \n                                    type=\"number\" \n                                    value={product.quantity} \n                                    onChange={(e) => {\n                                        console.log(\"Updated Quantity:\", e.target.value);\n                                        console.log(\"chichen\")\n                                        handleQuantityChange(product.productID, parseInt(e.target.value));\n                                    }}\n                                    className=\"quantityInput\" \n                                />\n                            </td>\n                            {/* <td>Total: ${roundedQuantity(product.price * (product.quantity || 1))}</td> */}\n                            {/* <td>Total: ${roundedQuantity(product.price * (product.quantity || 1))}</td> */}\n                            <td>Total: ${roundedQuantity(product.price * (product.quantity || 1))}</td>\n                        </tr>\n                    ))}\n                    {/* <p>{productIdsArray.join(', ')}</p> */}\n                    {/* {cart.map((product) => ( */}\n                        {/* <tr key={product.productID}>\n                            <td>\n                                <button onClick={() => productPage(product.productID)} style={{border: 'none', background: 'transparent'}}>\n                                    <img src={'/products/' + product.productID + '.webp'} \n                                        alt={\"Image of \" + product.productName} \n                                        width={70} \n                                        style={{border: '2px solid #000', borderRadius: '5px'}} />\n                                </button>\n                            </td>\n                            <td>{product.productName}</td>\n                            <td><button onClick={() => removeFromCart(product.productID)} className=\"removeBtn\">Remove</button></td>\n                            <td>\n                                <span>Qty:</span>\n                                <input type=\"number\" value={product.quantity || 1} onChange={(e) => updateQuantity(product.productID, parseInt(e.target.value))} className=\"quantityInput\" />\n                            </td>\n                            <td>Total: ${roundedQuantity(product.price * (product.quantity || 1))}</td>\n                        </tr> */}\n                    {/* ))} */}\n                </tbody>\n            </table>\n            <div className=\"clearCartGroup\">\n                <button onClick={clearCart} className=\"clearCart\">Clear Cart</button>\n                <span>Grand Total: ${roundedQuantity(grandTotal)}</span>\n            </div>\n            <div className=\"buttonsGroup\">\n                <button className=\"continueBtn\">Continue Shopping</button>\n                <button className=\"checkoutBtn\">Proceed To Checkout</button>\n            </div>\n            <button onClick={() => console.log(user.Name)} > test Button</button>\n        </div>\n    );\n}\nexport default CartPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}