{"ast":null,"code":"var _jsxFileName = \"/Users/Kiran/github-classroom/SEPT/team-project-group-p03-08/frontend/comparison-shopper/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport LandingPageContent from './Components/LandingPageContent.js';\nimport Navigatebar from './Components/Navigatebar.js';\nimport Footer from './Components/Footer.js';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ProductPage from './Components/ProductPage.js';\nimport SearchResultsPage from './Components/SearchResultsPage.js';\nimport CheckoutPage from './Components/CheckoutPage.js';\nimport UserProfilePage from './Components/UserProfilePage.js';\nimport CartPage from './Components/CartPage.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createContext, useEffect, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  user: null,\n  setUser: () => {}\n});\nexport const CartContext = /*#__PURE__*/createContext({\n  cart: [],\n  addToCart: () => {},\n  removeFromCart: () => {},\n  updateProductQuantity: () => {},\n  clearCart: () => {}\n});\nconst updateLocalStorage = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\nfunction App() {\n  _s();\n  const [user, setUser] = useState({\n    id: null\n  });\n  const userStateObject = {\n    user,\n    setUser\n  };\n  const cartKey = user && user.id ? `cart_${user.id}` : 'cart';\n  const [cart, setCart] = useState(() => {\n    return JSON.parse(localStorage.getItem(cartKey)) || [];\n  });\n\n  // useEffect(() => {\n  //   if (user && user.id) {\n  //     updateLocalStorage(cartKey, cart);\n  //   }\n  // }, [cart, user]);\n\n  useEffect(() => {\n    if (user && user.id) {\n      const syncWithBackend = async () => {\n        const response = await fetch('http://localhost:8080/v1/carts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            cartID: user.id,\n            cart\n          })\n        });\n        const updatedCart = await response.json();\n        setCart(updatedCart);\n      };\n      syncWithBackend();\n    }\n  }, [cart, user]);\n  const addToCart = async product => {\n    // Make the POST request first, then update state based on the server's response.\n    const response = await fetch(\"http://localhost:8080/v1/carts\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cartID: user.id,\n        product\n      }) // Assuming user.id is available\n    });\n\n    if (response.ok) {\n      // Assume the server returns the updated cart\n      const updatedCart = await response.json();\n\n      // Now update the cart based on the server's authoritative response\n      setCart(updatedCart.contents); // Assuming updatedCart.contents holds the array of products\n    } else {\n      // Handle errors here\n      console.error(\"Failed to add item to cart\");\n    }\n  };\n\n  // const addToCart = async (product) => {\n  //   //if (!user || !user.id) return;\n  //   setCart(prevCart => {\n  //       const existingProduct = prevCart.find(p => p.productID === product.productID);\n  //       if (existingProduct) {\n  //           // Increase the quantity for existing products\n  //           return prevCart.map(p => \n  //               p.productID === product.productID \n  //               ? { ...p, quantity: p.quantity + 1 }\n  //               : p\n  //           );\n  //       } else {\n  //           // Add new product with a quantity of 1\n  //           return [...prevCart, { ...product, quantity: 1 }];\n  //       }\n  //   });\n\n  //   // const response = await fetch('/api/cart/add', {\n  //   //   method: 'POST',\n  //   //   headers: { 'Content-Type': 'application/json' },\n  //   //   body: JSON.stringify({ userId: user.id, productID: product.productID })\n  //   // });\n\n  //   //setCart((prevState) => [...prevState, product]);\n\n  //   const response = await fetch(\"http://localhost:8080/v1/carts\", {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({cartID: user.id, product}),\n  //   });\n\n  //   // Assume the server returns the updated cart\n  //   const updatedCart = await response.json();\n  //   setCart(updatedCart);\n  // };\n\n  const updateProductQuantity = async (productID, newQuantity) => {\n    //if (!user || !user.id) return;\n    setCart(prevCart => prevCart.map(product => product.productID === productID ? {\n      ...product,\n      quantity: newQuantity\n    } : product));\n    await fetch(`/api/cart/update/${productID}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id,\n        newQuantity\n      })\n    });\n  };\n  const removeFromCart = async productIDToRemove => {\n    //if (!user || !user.id) return;\n    const updatedCart = cart.filter(product => product.productID !== productIDToRemove);\n    setCart(updatedCart);\n    await fetch(`/api/cart/remove/${productIDToRemove}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id\n      })\n    });\n  };\n  const clearCart = async () => {\n    //if (!user || !user.id) return;\n    setCart([]);\n    await fetch('/api/cart/clear', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id\n      })\n    });\n  };\n  const cartContextValue = {\n    cart,\n    addToCart,\n    removeFromCart,\n    updateProductQuantity,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: userStateObject,\n      children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n        value: cartContextValue,\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Navigatebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(LandingPageContent, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/ProductPage.js\",\n              element: /*#__PURE__*/_jsxDEV(ProductPage, {\n                cart: cart,\n                addToCart: addToCart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/SearchResultsPage.js\",\n              element: /*#__PURE__*/_jsxDEV(SearchResultsPage, {\n                cart: cart,\n                addToCart: addToCart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/CheckoutPage.js\",\n              element: /*#__PURE__*/_jsxDEV(CheckoutPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/UserProfilePage.js\",\n              element: /*#__PURE__*/_jsxDEV(UserProfilePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/CartPage.js\",\n              element: /*#__PURE__*/_jsxDEV(CartPage, {\n                cart: cart,\n                updateProductQuantity: updateProductQuantity,\n                removeFromCart: removeFromCart,\n                clearCart: clearCart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/product/:productId\",\n              element: /*#__PURE__*/_jsxDEV(ProductPage, {\n                cart: cart,\n                addToCart: addToCart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/search/:productId\",\n              element: /*#__PURE__*/_jsxDEV(SearchResultsPage, {\n                cart: cart,\n                addToCart: addToCart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"L/NXNwztmZRWKtOLjBJ2EuQtx8g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["LandingPageContent","Navigatebar","Footer","BrowserRouter","Router","Route","Routes","ProductPage","SearchResultsPage","CheckoutPage","UserProfilePage","CartPage","createContext","useEffect","useState","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","UserContext","user","setUser","CartContext","cart","addToCart","removeFromCart","updateProductQuantity","clearCart","updateLocalStorage","key","value","localStorage","setItem","JSON","stringify","App","_s","id","userStateObject","cartKey","setCart","parse","getItem","syncWithBackend","response","fetch","method","headers","body","cartID","updatedCart","json","product","ok","contents","console","error","productID","newQuantity","prevCart","map","quantity","userId","productIDToRemove","filter","cartContextValue","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/Kiran/github-classroom/SEPT/team-project-group-p03-08/frontend/comparison-shopper/src/App.js"],"sourcesContent":["import './App.css';\nimport LandingPageContent from './Components/LandingPageContent.js';\nimport Navigatebar from './Components/Navigatebar.js';\nimport Footer from './Components/Footer.js';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ProductPage from './Components/ProductPage.js';\nimport SearchResultsPage from './Components/SearchResultsPage.js';\nimport CheckoutPage from './Components/CheckoutPage.js';\nimport UserProfilePage from './Components/UserProfilePage.js';\nimport CartPage from './Components/CartPage.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createContext, useEffect, useState, useContext } from 'react';\n\nexport const UserContext = createContext({\n  user: null,\n  setUser: () => {}\n});\n\nexport const CartContext = createContext({\n  cart: [],\n  addToCart: () => {},\n  removeFromCart: () => {},\n  updateProductQuantity: () => {},\n  clearCart: () => {}\n});\n\n\nconst updateLocalStorage = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction App() {\n  const [user, setUser] = useState({id: null});\n  const userStateObject = { user, setUser };\n  \n  const cartKey = user && user.id ? `cart_${user.id}` : 'cart';\n  \n  const [cart, setCart] = useState(() => {\n    return JSON.parse(localStorage.getItem(cartKey)) || [];\n  });\n\n\n\n  // useEffect(() => {\n  //   if (user && user.id) {\n  //     updateLocalStorage(cartKey, cart);\n  //   }\n  // }, [cart, user]);\n\n\n  useEffect(() => {\n    if (user && user.id) {\n      const syncWithBackend = async () => {\n        const response = await fetch('http://localhost:8080/v1/carts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ cartID: user.id, cart }),\n        });\n  \n        const updatedCart = await response.json();\n        setCart(updatedCart);\n      };\n  \n      syncWithBackend();\n    }\n  }, [cart, user]);\n  \n  const addToCart = async (product) => {\n    // Make the POST request first, then update state based on the server's response.\n    const response = await fetch(\"http://localhost:8080/v1/carts\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({cartID: user.id, product}),  // Assuming user.id is available\n    });\n    \n    if (response.ok) {\n      // Assume the server returns the updated cart\n      const updatedCart = await response.json();\n  \n      // Now update the cart based on the server's authoritative response\n      setCart(updatedCart.contents); // Assuming updatedCart.contents holds the array of products\n    } else {\n      // Handle errors here\n      console.error(\"Failed to add item to cart\");\n    }\n  };\n  \n\n  // const addToCart = async (product) => {\n  //   //if (!user || !user.id) return;\n  //   setCart(prevCart => {\n  //       const existingProduct = prevCart.find(p => p.productID === product.productID);\n  //       if (existingProduct) {\n  //           // Increase the quantity for existing products\n  //           return prevCart.map(p => \n  //               p.productID === product.productID \n  //               ? { ...p, quantity: p.quantity + 1 }\n  //               : p\n  //           );\n  //       } else {\n  //           // Add new product with a quantity of 1\n  //           return [...prevCart, { ...product, quantity: 1 }];\n  //       }\n  //   });\n\n  //   // const response = await fetch('/api/cart/add', {\n  //   //   method: 'POST',\n  //   //   headers: { 'Content-Type': 'application/json' },\n  //   //   body: JSON.stringify({ userId: user.id, productID: product.productID })\n  //   // });\n\n  //   //setCart((prevState) => [...prevState, product]);\n\n  //   const response = await fetch(\"http://localhost:8080/v1/carts\", {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({cartID: user.id, product}),\n  //   });\n  \n  //   // Assume the server returns the updated cart\n  //   const updatedCart = await response.json();\n  //   setCart(updatedCart);\n  // };\n\n  const updateProductQuantity = async (productID, newQuantity) => {\n    //if (!user || !user.id) return;\n    setCart(prevCart => prevCart.map(product => \n        product.productID === productID \n        ? { ...product, quantity: newQuantity }\n        : product\n    ));\n  \n    await fetch(`/api/cart/update/${productID}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: user.id, newQuantity })\n    });\n\n  };\n\n  const removeFromCart = async (productIDToRemove) => {\n    //if (!user || !user.id) return;\n    const updatedCart = cart.filter(product => product.productID !== productIDToRemove);\n    setCart(updatedCart);\n\n    await fetch(`/api/cart/remove/${productIDToRemove}`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: user.id })\n    });\n  }\n  \n  const clearCart = async () => {\n    //if (!user || !user.id) return;\n    setCart([]);\n\n    await fetch('/api/cart/clear', {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: user.id })\n    });\n  }\n\n  const cartContextValue = {\n    cart,\n    addToCart,\n    removeFromCart,\n    updateProductQuantity,\n    clearCart\n  };\n\n  return (\n    <>\n      <UserContext.Provider value={userStateObject}>\n      <CartContext.Provider value={cartContextValue}>\n        <Router>\n          <Navigatebar/>\n          <Routes>\n            <Route path=\"/\" element={<LandingPageContent />} />\n            <Route path=\"/ProductPage.js\" element={<ProductPage cart={cart} addToCart={addToCart} />} />\n            <Route path=\"/SearchResultsPage.js\" element={<SearchResultsPage cart={cart} addToCart={addToCart}/>} />\n            <Route path=\"/CheckoutPage.js\" element={<CheckoutPage />} />\n            <Route path=\"/UserProfilePage.js\" element={<UserProfilePage />} />\n            <Route path=\"/CartPage.js\" element={<CartPage cart={cart} updateProductQuantity={updateProductQuantity} removeFromCart={removeFromCart} clearCart={clearCart} />} />\n            <Route path=\"/product/:productId\" element={<ProductPage cart={cart} addToCart={addToCart} />} />\n            <Route path=\"/search/:productId\" element={<SearchResultsPage cart={cart} addToCart={addToCart}/>} />\n          </Routes>\n          <Footer/>\n        </Router>\n        </CartContext.Provider>\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}